# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# Name of the GIT branch that triggers the pipeline
trigger:
- main

# Removed (from the generated yaml)
#resources:
#- repo: self

# Reusable variables
variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '1f223625-731a-478e-ae3e-e512a05a0d39'
  imageRepository: 'hello-aspnetcore'
  containerRegistry: 'emmanuelm777containerregistry.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  # Removed since we have set up a service principle
  #magePullSecret: 'emmanuelm777containerregistry00fe-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - publish: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'EmmanuelM777HelloAspNetCore.default'
    strategy:
      runOnce:
        deploy:
          steps:
          # Removed since we have set up a service principle
          #- task: KubernetesManifest@0
          #  displayName: Create imagePullSecret
          #  inputs:
          #    action: createSecret
          #    secretName: $(imagePullSecret)
          #    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              # Removed since we have set up a service principle
              #imagePullSecrets: |
              #  $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

